#!/usr/bin/env bash

set -euo pipefail

echo "Starting etcd"

TIMEOUT=60
if timeout "$TIMEOUT" /bin/bash <<EOF
  #!/bin/bash

  until /var/vcap/bosh/bin/monit start etcd; do
    echo "starting etcd"
    sleep 5
  done
EOF
then
  echo "monit has started etcd"
else
  echo "monit was unable to start etcd after $TIMEOUT seconds"
  exit 1
fi

if timeout "$TIMEOUT" /bin/bash <<EOF
  #!/bin/bash

  until /var/vcap/bosh/bin/monit summary | grep etcd | grep "running"; do
    echo "waiting for etcd daemon to start"
    sleep 5
  done
EOF
then
  echo "etcd daemon has started"
else
  echo "etcd daemon was unable to start after $TIMEOUT seconds"
  exit 1
fi

# The first etcd to run will parse a lot of new data, and it takes time.
# (The followers afterward will take only a few seconds.)

if timeout "$TIMEOUT" /bin/bash <<EOF
#!/bin/bash

until ETCDCTL_API=3 LOCAL=true /var/vcap/jobs/etcd/bin/etcdctl endpoint health > /dev/null ; do
  sleep 5
done
EOF
then
  echo "etcd daemon served the local health endpoint successfully"
else
  echo "etcd daemon was unable to serve the local health endpoint within $TIMEOUT seconds; continuing anyway"
fi
