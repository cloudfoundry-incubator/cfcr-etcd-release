resource_types:
- name: bbl-state-resource
  type: docker-image
  source:
    repository: cfinfrastructure/bbl-state-resource

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: gcs
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: bosh-create-time
  type: time
  source:
    start: 12:00 AM
    stop: 1:00 AM
    location: Europe/Dublin
    days: [Sunday]

- name: git-cfcr-etcd-release
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/cfcr-etcd-release
    branch: master
    private_key: ((git-ssh-key.private_key))

- name: stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent

- name: single-node-deployment
  type: bosh-deployment
  source:
    deployment: etcd-single-node
    target: ((cfcr-etcd-bosh.target))
    client: ((cfcr-etcd-bosh.client))
    client_secret: ((cfcr-etcd-bosh.client_secret))
    ca_cert: ((cfcr-etcd-bosh.ca_cert))
    jumpbox_url: ((cfcr-etcd-bosh.jumpbox_url))
    jumpbox_ssh_key: ((cfcr-etcd-bosh.jumpbox_ssh_key))
    skip_check: true

- name: etcd-deployment
  type: bosh-deployment
  source:
    deployment: etcd
    target: ((cfcr-etcd-bosh.target))
    client: ((cfcr-etcd-bosh.client))
    client_secret: ((cfcr-etcd-bosh.client_secret))
    ca_cert: ((cfcr-etcd-bosh.ca_cert))
    jumpbox_url: ((cfcr-etcd-bosh.jumpbox_url))
    jumpbox_ssh_key: ((cfcr-etcd-bosh.jumpbox_ssh_key))
    skip_check: true

- name: etcd-scale-deployment
  type: bosh-deployment
  source:
    deployment: etcd-scale
    target: ((cfcr-etcd-bosh.target))
    client: ((cfcr-etcd-bosh.client))
    client_secret: ((cfcr-etcd-bosh.client_secret))
    ca_cert: ((cfcr-etcd-bosh.ca_cert))
    jumpbox_url: ((cfcr-etcd-bosh.jumpbox_url))
    jumpbox_ssh_key: ((cfcr-etcd-bosh.jumpbox_ssh_key))
    skip_check: true

- name: etcd-multiaz-deployment
  type: bosh-deployment
  source:
    deployment: etcd-multiaz
    target: ((cfcr-etcd-bosh.target))
    client: ((cfcr-etcd-bosh.client))
    client_secret: ((cfcr-etcd-bosh.client_secret))
    ca_cert: ((cfcr-etcd-bosh.ca_cert))
    jumpbox_url: ((cfcr-etcd-bosh.jumpbox_url))
    jumpbox_ssh_key: ((cfcr-etcd-bosh.jumpbox_ssh_key))
    skip_check: true

- name: bbl-state
  type: bbl-state-resource
  source:
    bucket: kubo-pipeline-store
    iaas: gcp
    gcp_region: us-central1
    gcp_service_account_key: ((gcp-service-account))

- name: gcs-bbl-state
  type: gcs
  source:
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store
    versioned_file: etcd-bosh

- name: bbr-single-node-deployment
  type: bosh-deployment
  source:
    deployment: bbr-etcd-single-node
    skip_check: true

- name: bbr-github-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: bosh-backup-and-restore
    access_token: ((github-kubo-gitbot-access-token))

- name: cfcr-etcd-release-version
  type: semver
  source:
    initial_version: 1.8.0
    driver: gcs
    key: versions/cfcr-etcd-release-version
    json_key: ((gcs-json-key))
    bucket: kubo-pipeline-store

- name: gh-release-cfcr-etcd-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: cfcr-etcd-release
    access_token: ((cfcr-user-release-token))
    drafts: true
    pre_release: true

groups:
- name: all
  jobs:
  - deploy-etcd
  - run-acceptance-etcd
  - delete-etcd
  - deploy-etcd-single-node
  - run-acceptance-etcd-single-node
  - delete-etcd-single-node
  - AZ-failure-test
  - delete-etcd-multiaz
  - scale-from-1-to-3-nodes
  - delete-etcd-scale
  - bbr-deploy-etcd-single-node
  - run-bbr-tests
  - bbr-delete-etcd-single-node
  - deploy-bosh
  - shipit
- name: bosh-etcd
  jobs:
  - deploy-bosh
- name: bbr-tests
  jobs:
  - bbr-deploy-etcd-single-node
  - run-bbr-tests
  - bbr-delete-etcd-single-node
- name: etcd-acceptance-tests
  jobs:
  - deploy-etcd
  - run-acceptance-etcd
  - delete-etcd
  - deploy-etcd-single-node
  - run-acceptance-etcd-single-node
  - delete-etcd-single-node
  - AZ-failure-test
  - delete-etcd-multiaz
  - scale-from-1-to-3-nodes
  - delete-etcd-scale

jobs:
- name: deploy-etcd
  serial: true
  serial_groups: [etcd]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      trigger: true
    - get: stemcell
  - task: create-release
    config:
      inputs:
      - name: git-cfcr-etcd-release
      outputs:
      - name: cfcr-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -c
        - |
          set -exu
          bosh create-release --dir=git-cfcr-etcd-release --tarball=cfcr-etcd-release-tarball/cfcr-etcd-release.tgz --timestamp-version
  - put: etcd-deployment
    params:
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      cleanup: true

- name: run-acceptance-etcd
  serial: true
  serial_groups: [etcd]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ deploy-etcd ]
    trigger: true
  - task: run-acceptance-errand
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      inputs:
      - name: git-cfcr-etcd-release
      run:
        path: git-cfcr-etcd-release/ci/scripts/run-acceptance-errand.sh

- name: delete-etcd
  serial: true
  serial_groups: [etcd]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ run-acceptance-etcd ]
    trigger: true
  - put: etcd-deployment
    params:
      delete:
        enabled: true

- name: deploy-etcd-single-node
  serial: true
  serial_groups: [etcd-single-node]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      trigger: true
    - get: stemcell
  - task: create-release
    config:
      inputs:
      - name: git-cfcr-etcd-release
      outputs:
      - name: cfcr-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -c
        - |
          set -exu
          bosh create-release --dir=git-cfcr-etcd-release --tarball=cfcr-etcd-release-tarball/cfcr-etcd-release.tgz --timestamp-version
  - put: single-node-deployment
    params:
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      ops_files:
      - git-cfcr-etcd-release/manifests/ops-files/single-node.yml
      - git-cfcr-etcd-release/manifests/ops-files/rename-network-and-deployment.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      vars:
        deployment-name: etcd-single-node
        network-name: default
      cleanup: true

- name: run-acceptance-etcd-single-node
  serial: true
  serial_groups: [etcd-single-node]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ deploy-etcd-single-node ]
    trigger: true
  - task: run-acceptance-errand
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-single-node
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      inputs:
      - name: git-cfcr-etcd-release
      run:
        path: git-cfcr-etcd-release/ci/scripts/run-acceptance-errand.sh

- name: delete-etcd-single-node
  serial: true
  serial_groups: [etcd-single-node]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ run-acceptance-etcd-single-node ]
    trigger: true
  - put: single-node-deployment
    params:
      delete:
        enabled: true

- name: AZ-failure-test
  serial: true
  serial_groups: [etcd-az-failure]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      trigger: true
    - get: stemcell
  - task: create-cfcr-etcd-release
    config:
      inputs:
      - name: git-cfcr-etcd-release
      outputs:
      - name: cfcr-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -exuc
        - bosh create-release --dir=git-cfcr-etcd-release --tarball=cfcr-etcd-release-tarball/cfcr-etcd-release.tgz --timestamp-version
  - put: etcd-multiaz-deployment
    params:
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      ops_files:
      - git-cfcr-etcd-release/manifests/ops-files/rename-network-and-deployment.yml
      cleanup: true
      vars:
        deployment-name: etcd-multiaz
        network-name: default
  - task: delete-vm
    config:
      platform: linux
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-multiaz
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      inputs:
      - name: git-cfcr-etcd-release
      run:
        path: git-cfcr-etcd-release/ci/scripts/delete-vm.sh

  - task: run-acceptance-errand
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-multiaz
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      inputs:
      - name: git-cfcr-etcd-release
      run:
        path: git-cfcr-etcd-release/ci/scripts/run-acceptance-errand.sh

- name: delete-etcd-multiaz
  serial: true
  serial_groups: [etcd-az-failure]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ AZ-failure-test ]
    trigger: true
  - put: etcd-multiaz-deployment
    params:
      delete:
        enabled: true


- name: scale-from-1-to-3-nodes
  serial: true
  serial_groups: [etcd-scale]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      trigger: true
    - get: stemcell
  - task: create-cfcr-etcd-release
    config:
      inputs:
      - name: git-cfcr-etcd-release
      outputs:
      - name: cfcr-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -exuc
        - bosh create-release --dir=git-cfcr-etcd-release --tarball=cfcr-etcd-release-tarball/cfcr-etcd-release.tgz --timestamp-version
  - put: etcd-scale-deployment
    params:
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      ops_files:
      - git-cfcr-etcd-release/manifests/ops-files/rename-network-and-deployment.yml
      - git-cfcr-etcd-release/manifests/ops-files/single-node.yml
      cleanup: true
      vars:
        deployment-name: etcd-scale
        network-name: default
  - task: set-and-check-value
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-scale
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      inputs:
      - name: git-cfcr-etcd-release
      run:
        path: git-cfcr-etcd-release/ci/scripts/set-and-check-value.sh

  - put: etcd-scale-deployment
    params:
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      ops_files:
      - git-cfcr-etcd-release/manifests/ops-files/rename-network-and-deployment.yml
      cleanup: true
      vars:
        deployment-name: etcd-scale
        network-name: default
  - task: check-value
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      params:
        BOSH_ENVIRONMENT: ((cfcr-etcd-bosh.target))
        BOSH_CLIENT: ((cfcr-etcd-bosh.client))
        BOSH_CLIENT_SECRET: ((cfcr-etcd-bosh.client_secret))
        BOSH_CA_CERT: ((cfcr-etcd-bosh.ca_cert))
        BOSH_DEPLOYMENT: etcd-scale
        JUMPBOX_URL: ((cfcr-etcd-bosh.jumpbox_url))
        JUMPBOX_SSH_KEY: ((cfcr-etcd-bosh.jumpbox_ssh_key))
      inputs:
      - name: git-cfcr-etcd-release
      run:
        path: git-cfcr-etcd-release/ci/scripts/check-value-3-nodes.sh

- name: delete-etcd-scale
  serial: true
  serial_groups: [etcd-scale]
  plan:
  - get: git-cfcr-etcd-release
    passed: [ scale-from-1-to-3-nodes ]
    trigger: true
  - put: etcd-scale-deployment
    params:
      delete:
        enabled: true

- name: bbr-deploy-etcd-single-node
  serial: true
  serial_groups: [bbr-etcd-single-node]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      trigger: true
    - get: stemcell
    - get: gcs-bbl-state
  - task: unpack-bbl-state
    file: git-cfcr-etcd-release/ci/tasks/unpack-bbl-state.yml
  - task: create-release
    config:
      inputs:
      - name: git-cfcr-etcd-release
      outputs:
      - name: cfcr-etcd-release-tarball
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pcfkubo/kubo-ci}
      run:
        path: bash
        args:
        - -c
        - |
          set -exu
          bosh create-release --dir=git-cfcr-etcd-release --tarball=cfcr-etcd-release-tarball/cfcr-etcd-release.tgz --timestamp-version
  - put: bbr-single-node-deployment
    params:
      source_file: bbl-state/metadata
      manifest: git-cfcr-etcd-release/manifests/etcd.yml
      ops_files:
      - git-cfcr-etcd-release/manifests/ops-files/single-node.yml
      - git-cfcr-etcd-release/manifests/ops-files/rename-network-and-deployment.yml
      - git-cfcr-etcd-release/manifests/ops-files/enable-bbr.yml
      stemcells:
      - stemcell/stemcell.tgz
      releases:
      - cfcr-etcd-release-tarball/cfcr-etcd-release.tgz
      vars:
        deployment-name: bbr-etcd-single-node
        network-name: default
      cleanup: true

- name: run-bbr-tests
  serial: true
  serial_groups: [bbr-etcd-single-node]
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      passed: ['bbr-deploy-etcd-single-node']
      trigger: true
    - get: bbr-release
      resource: bbr-github-release
    - get: gcs-bbl-state
  - task: unpack-bbl-state
    file: git-cfcr-etcd-release/ci/tasks/unpack-bbl-state.yml
  - task: run-tests
    file: git-cfcr-etcd-release/ci/tasks/run-bbr-tests.yml
    privileged: true

- name: bbr-delete-etcd-single-node
  serial: true
  serial_groups: [bbr-single-node-deployment]
  plan:
  - get: git-cfcr-etcd-release
    passed: ['run-bbr-tests']
    trigger: true
  - get: gcs-bbl-state
  - task: unpack-bbl-state
    file: git-cfcr-etcd-release/ci/tasks/unpack-bbl-state.yml
  - put: bbr-single-node-deployment
    params:
      source_file: bbl-state/metadata
      delete:
        enabled: true

- name: deploy-bosh
  plan:
  - get: bosh-create-time
    trigger: true
  - get: gcs-bbl-state
  - get: git-cfcr-etcd-release
  - task: unpack-bbl-state
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: bash
      inputs:
      - name: gcs-bbl-state
      - name: git-cfcr-etcd-release
      outputs:
      - name: orig-bbl-state
      run:
        path: bash
        args:
        - -c
        - |
          set -euo pipefail
          cd orig-bbl-state
          tar xvf ../gcs-bbl-state/etcd-bosh
          cp ../git-cfcr-etcd-release/ci/bbl-patch/*.tf terraform/

  - put: bbl-state
    params:
      command: up
      name: etcd-bosh
      state_dir: orig-bbl-state

- name: shipit
  plan:
  - aggregate:
    - get: git-cfcr-etcd-release
      passed:
      - delete-etcd
      - delete-etcd-multiaz
      - delete-etcd-single-node
      - bbr-delete-etcd-single-node
      - delete-etcd-scale
    - get: cfcr-etcd-release-version
  - task: create-final-release
    file: git-cfcr-etcd-release/ci/tasks/create-final-release.yml
    params:
      ACCESS_KEY_ID: ((gcs-access-key-id))
      SECRET_ACCESS_KEY: ((gcs-secret-access-key))
  - put: git-cfcr-etcd-release
    params:
      repository: git-cfcr-etcd-release-output
      merge: true
  - put: gh-release-cfcr-etcd-release
    params:
      name: cfcr-etcd-release/name
      tag: cfcr-etcd-release-version/version
      tag_prefix: v
      body: cfcr-etcd-release/body
      globs: ["cfcr-etcd-release/*.tgz"]
  - put: cfcr-etcd-release-version
    params:
      bump: minor
